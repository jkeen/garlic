$total_time: 15s;
$segment_time: $total_time / 4;
$initial_delay: 0.5s;
$border_width: 40px;
$border_color: rgba(0,0,0,0.5);

.surrounding-borders {
	position: absolute;
	z-index: -1;
	width: 100%;
	height: 100%;
	border: 0px solid $border_color;
	pointer-events: none;
}

.surrounding-borders div {
	position: fixed;
	background-color: transparent;
}

.surrounding-borders div:first-child,
.surrounding-borders div:nth-child(3) {
	width: 0;
	height: $border_width;
}

.surrounding-borders div:nth-child(2),
.surrounding-borders div:nth-child(4) {
	width: $border_width;
	height: 0;
}

.surrounding-borders div:first-child {
	top: 0;
	left: 0;
}

body[data-time_total] .surrounding-borders div:first-child {
	width: 100%;
	-webkit-transition: width $segment_time linear $initial_delay;
	transition: width $segment_time linear $initial_delay;
}

.surrounding-borders div:nth-child(2) {
	top: 0;
	right: 0;
}

body[data-time_total] .surrounding-borders div:nth-child(2) {
	height: 100%;
	-webkit-transition: height $segment_time linear ($segment_time + $initial_delay);
	transition: height $segment_time linear ($segment_time + $initial_delay);
}

.surrounding-borders div:nth-child(3) {
	right: 0;
	bottom: 0;
}

body[data-time_total] .surrounding-borders div:nth-child(3) {
	width: 100%;
	-webkit-transition: width $segment_time linear (($segment_time * 2) + $initial_delay);
	transition: width $segment_time linear (($segment_time * 2) + $initial_delay);
}

.surrounding-borders div:nth-child(4) {
	bottom: 0;
	left: 0;
}

body[data-time_total] .surrounding-borders div:nth-child(4) {
	height: 100%;
	-webkit-transition: height $segment_time linear (($segment_time * 3) + $initial_delay);
	transition: height $segment_time linear (($segment_time * 3) + $initial_delay);
}

body[data-time_total] .surrounding-borders {
	z-index: 100;
	border: $border_width solid $border_color;
	opacity: 0;
	-webkit-transition: border $initial_delay, opacity $initial_delay ($total_time + $initial_delay);
	transition: border $initial_delay, opacity $initial_delay ($total_time + $initial_delay);
}

